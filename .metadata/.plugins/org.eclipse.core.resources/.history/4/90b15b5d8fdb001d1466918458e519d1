package comm.octest.beans;

import java.sql.SQLException;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import comm.octest.db.DAO;

public class QuoteFactory {
    private  Map<String, Quote> quotes = new HashMap<>();
    private Map<String,Integer> user_quote = new HashMap<>();

    public Quote addQuote(String name_book, String quote_text, int userId) throws SQLException {
        // CREATE THE KEY
        String key = name_book + quote_text ;
        fetchQuotes() ;
        
        Quote quote = (Quote) quotes.get(key);

        // IF IT DOESN'T EXIST, CREATE A NEW ONE IN THE MAP
        if (quote == null) {
            quote = new Quote(name_book, quote_text, userId);
            quotes.put(key, quote);
            quote.save();
        }
        user_quote.put(key, userId);
        return quote;
    }

    
    public void addUserIds(int userId,String key) {
    	  Quote quote = new Quote() ; 
    	  List<Quote> user_quote_list = quote.fetchUserQuote() ; 
    	  
    	  for(Quote userQuote : user_quote_list) { 
    		  
    	 String quote_text = userQuote.getQuoteText() ; 
    	 String user_id = userQuote.Quote. getUserId() ;
    	
    	user_quote.put(key, userId);
    	  }
    	
    }
    public void fetchQuotes() throws SQLException { 
    	  Quote quote = new Quote() ; 
    	  List<Quote> quotesList = quote.fetchQuotes() ; 
    	  for(Quote q : quotesList) { 
          String name_book = q.getName_book();
    	 
    	  String quote_text  = q.getQuoteText() ; 
    	  String key = name_book+quote_text ;
    	  quotes.put(key, quote);
    	  }
    }
    
  
   

 
}
